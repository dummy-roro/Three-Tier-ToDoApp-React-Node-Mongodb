name: Secure CI/CD Pipeline 

on:
  push:
    branches: [master]

jobs:
  frontend:
    name: Frontend CI/CD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        working-directory: Application-Code/frontend
        run: npm ci

      - name: Audit Dependencies
        working-directory: Application-Code/frontend
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run Unit Tests + Coverage
        working-directory: Application-Code/frontend
        run: |
          if npm run test --if-present -- --coverage; then
            echo "✅ Tests passed"
          else
            echo "⚠️ No tests found or tests failed - will add in staging"
          fi
        continue-on-error: true

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: Application-Code/frontend/coverage/lcov.info
        continue-on-error: true

      - name: Trivy File System Scan (HTML)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'Application-Code/frontend'
          format: 'html'
          output: 'trivy-frontend-fs.html'
        continue-on-error: true

      - name: Trivy File System Scan (Fail on High/Critical)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'Application-Code/frontend'
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: Application-Code/frontend
          load: true
          tags: frontend:latest

      - name: Trivy Image Scan (HTML)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'frontend:latest'
          format: 'html'
          output: 'trivy-frontend-image.html'
        continue-on-error: true

      - name: Trivy Image Scan (Fail on High/Critical)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'frontend:latest'
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

      - name: Debug - List generated files
        if: always()
        run: |
          echo "=== Current directory files ==="
          ls -la
          echo "=== Looking for trivy files ==="
          find . -name "trivy-*" -type f
          echo "=== File contents check ==="
          for file in trivy-frontend-*.html trivy-frontend-*.txt trivy-frontend-*.sarif; do
            if [ -f "$file" ]; then
              echo "Found: $file (size: $(stat -c%s "$file") bytes)"
            else
              echo "Missing: $file"
            fi
          done

      - name: Upload Frontend Trivy Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-trivy-reports
          path: |
            trivy-frontend-*.html
          if-no-files-found: warn
            
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: Application-Code/frontend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}

  backend:
    name: Backend CI/CD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        working-directory: Application-Code/backend
        run: npm ci

      - name: Audit Dependencies
        working-directory: Application-Code/backend
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run Unit Tests + Coverage
        working-directory: Application-Code/backend
        run: |
          if npm run test --if-present -- --coverage; then
            echo "✅ Tests passed"
          else
            echo "⚠️ No tests found or tests failed - will add in staging"
          fi
        continue-on-error: true

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: Application-Code/backend/coverage/lcov.info
        continue-on-error: true

      - name: Trivy File System Scan (HTML)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'Application-Code/backend'
          format: 'html'
          output: 'trivy-backend-fs.html'
        continue-on-error: true

      - name: Trivy File System Scan (Fail on High/Critical)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'Application-Code/backend'
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: Application-Code/backend
          load: true
          tags: backend:latest

      - name: Trivy Image Scan (HTML)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backend:latest'
          format: 'html'
          output: 'trivy-backend-image.html'
        continue-on-error: true

      - name: Trivy Image Scan (Fail on High/Critical)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backend:latest'
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

      - name: Debug - List generated files
        if: always()
        run: |
          echo "=== Current directory files ==="
          ls -la
          echo "=== Looking for trivy files ==="
          find . -name "trivy-*" -type f
          echo "=== File contents check ==="
          for file in trivy-backend-*.html trivy-backend-*.txt trivy-backend-*.sarif; do
            if [ -f "$file" ]; then
              echo "Found: $file (size: $(stat -c%s "$file") bytes)"
            else
              echo "Missing: $file"
            fi
          done

      - name: Upload Backend Trivy Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-trivy-reports
          path: |
            trivy-backend-*.html
          if-no-files-found: warn

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: Application-Code/backend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}

  upload-reports:
    name: Upload Consolidated Security Reports
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: always()
    steps:
      - name: Download Frontend Trivy Reports
        uses: actions/download-artifact@v4
        with:
          name: frontend-trivy-reports
          path: ./reports
        continue-on-error: true

      - name: Download Backend Trivy Reports
        uses: actions/download-artifact@v4
        with:
          name: backend-trivy-reports
          path: ./reports
        continue-on-error: true

      - name: List downloaded files
        run: |
          echo "=== Downloaded files ==="
          find ./reports -type f 2>/dev/null || echo "No files found in reports directory"
          ls -la ./reports/ 2>/dev/null || echo "Reports directory not found"

      - name: Upload All Trivy Security Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-security-reports
          path: ./reports/
          if-no-files-found: warn
